import { Card, CardActionArea, CardContent, Chip, Skeleton, Stack, Typography } from '@mui/material'
import { ApplicationDTOPackagingFormatEnum, ApplicationReducedViewDTO } from '../../../../autogenerated/client/backend'
import moment from 'moment'
import { Link, useLocation } from 'react-router-dom'

export default function ApplicationCard({ app }: { app: ApplicationReducedViewDTO }) {
  const { search } = useLocation()

  const maxDescriptionLength = 220
  const href = `/applications/${app.slug_name}`
  const comingSoon = app.packaging_format === ApplicationDTOPackagingFormatEnum.Rpm || !app.packaging_format 

  function humanFriendlyPackagingFormat() {
    if (app.packaging_format === ApplicationDTOPackagingFormatEnum.HelmChart) return 'Helm chart'
    if (app.packaging_format === ApplicationDTOPackagingFormatEnum.Container) return 'Single container'
    return 'Coming soon'
  }

  return (
    <Card 
      variant='outlined' 
      sx={ { 
        maxWidth: 'lg', 
        '&:hover': comingSoon ? {} : { borderColor: 'primary.main', boxShadow: 2 } } }>
      <CardActionArea 
        component={ Link }
        to={ comingSoon ? '#' : `${href}${search}` } 
        disabled={ comingSoon }>
        <CardContent sx={ { p: 3 } }>
          <Stack direction={ { xs: 'column', sm: 'row' } } alignItems={ { xs: 'start', sm: 'center' } } flexWrap='wrap' rowGap={ 2 } >
            <Stack direction='row' spacing={ 2 } flexGrow='1' alignItems='center' sx={ { mr: 2 } }>
              { app.logo_url && <img src={ `https://apps.rancher.io${app.logo_url}` } alt={ `${app.name} logo` } height={ 46 } width={ 46 } style={ { height: '100%' } } /> }
              <Stack direction='column'>
                <Typography variant='h3'>{ app.name }</Typography>
                <Typography variant='caption'>Last updated { moment(app.last_updated_at).fromNow() }</Typography>
              </Stack>
            </Stack>
            <Chip label={ humanFriendlyPackagingFormat() } size='small' color={ comingSoon ? 'default' : 'primary' } />
          </Stack>
          <Typography 
            variant='body2' 
            sx={ { mt: 2 } }>
            { app.description.length > maxDescriptionLength ? `${app.description.slice(0, app.description.slice(0, maxDescriptionLength).lastIndexOf(' '))}...` : app.description }
          </Typography>
        </CardContent>
      </CardActionArea>
    </Card>
  )
}

export function ApplicationCardSkeleton() {
  return (
    <Card 
      variant='outlined' 
      sx={ { maxWidth: 'lg' } }>
      <CardActionArea href='#' disabled>
        <CardContent sx={ { p: 3 } }>
          <Stack direction={ { xs: 'column', sm: 'row' } } alignItems={ { xs: 'start', sm: 'center' } } flexWrap='wrap' rowGap={ 2 } >
            <Stack direction='row' spacing={ 2 } flexGrow='1' alignItems='center' sx={ { mr: 2 } }>
              <Skeleton variant='rectangular' height={ 46 } width={ 46 } /> 
              <Stack direction='column'>
                <Skeleton variant='text' width={ 130 } height={ 21 } />
                <Skeleton variant='text' width={ 130 } height={ 18 } />
              </Stack>
            </Stack>
            <Skeleton variant='rectangular' height={ 24 } width={ 73 } /> 
          </Stack>
          <Skeleton width='100%' sx={ { mt: 2 } } />
          <Skeleton width='75%' />
        </CardContent>
      </CardActionArea>
    </Card>
  )
}
